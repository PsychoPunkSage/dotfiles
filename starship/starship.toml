add_newline = false
command_timeout = 1000

format = """
$os\
$hostname\
$username\
$sudo\
$directory\
$git_branch\
$git_state\
$git_status\
$git_metrics\
$fill\
$docker_context\
$kubernetes\
$rust\
$golang\
$python\
$nodejs\
$lua\
$solidity\
$dotnet\
$shell\
$cmd_duration $jobs $time\
$line_break\
$character\
"""

[os]
format = '[$symbol](bold bright-white)  '
disabled = false

[os.symbols]
Windows = 'Óò™'
Arch = 'Û∞£á'
Ubuntu = 'Ôåõ'
Macos = 'Û∞Äµ'

[username]
style_user = 'white bold'
style_root = 'black bold'
format = '[.$user]($style) '
disabled = false
show_always = true

[hostname]
ssh_only = false
format = '[$hostname](bold bright-black)'
disabled = false

[docker_context]
symbol = "Û∞°®"
format = '[$symbol ($version )]($style)'
detect_files = ["docker-compose.yml", "docker-compose.yaml", "Dockerfile"]

[kubernetes]
symbol = "‚ò∏"
format = '[$symbol $context( \($namespace\))]($style) '
detect_files = ["k8s", "skaffold.yaml"]
detect_folders = [".kube"]

[rust]
symbol = "Óû®"
format = '[$symbol ($version )]($style)'
detect_files = ["Cargo.toml", "Cargo.lock"]

[golang]
symbol = "Óòß"
format = '[$symbol ($version )]($style)'
detect_files = ["go.mod", "go.sum", "glide.yaml", "Gopkg.yml", "Gopkg.lock", ".go-version"]

[python]
symbol = "Û∞å†"
format = '[${symbol}${pyenv_prefix}(${version} )(\($virtualenv\) )]($style)'
detect_files = ["requirements.txt", "pyproject.toml", "Pipfile", "setup.py", "setup.cfg", "tox.ini", ".python-version"]

[lua]
symbol = ""
format = '[$symbol ($version )]($style)'
detect_files = ["?.lua", ".lua-version", ".luacheckrc"]

[shell]
format = "[$indicator]($style) "
disabled = false

[solidity]
symbol = "‚óÜ"
format = '[$symbol ($version )]($style)'
detect_files = ["*.sol"]
detect_extensions = ["sol"]

[nodejs]
symbol = "Óúò"
format = "[$symbol ($version )]($style)"
detect_files = ["package.json", ".nvmrc", ".node-version"]

[dotnet]
symbol = "Û∞™Æ"
format = '[$symbol ($version )(üéØ $tfm )]($style)'
detect_files = ["project.json", "global.json", "paket.dependencies", "*.csproj", "*.fsproj", "*.xproj"]

[fill]
symbol = " "

[sudo]
format = "[$symbol]($style)"
style = "italic bright-purple"
symbol = "‚óá‚îà"
disabled = false

[directory]
truncation_length = 1
truncation_symbol = '‚Ä¶/'
# home_symbol = 'Û∞ãú ~'
read_only_style = '197'
read_only = ' ÔÄ£ '
format = '[Û∞ãú ~ $path]($style)[$read_only]($read_only_style) '

[character]
success_symbol = "[\\$](bold bright-green)"
# success_symbol = "[ ‚§∑](bold bright-white)"
# success_symbol = "[ ‚Ü¨](bold bright-white)"
# error_symbol = "[‚ùØ](bold bright-red)"
error_symbol = "[ ‚Ü≥](bold bright-red)"
# success_symbol = ' '
# error_symbol = ' '
vimcmd_symbol = "[<](bold green)"

[git_branch]
symbol = "Ôêò "
format = "[$symbol$branch]($style) "

[jobs]
symbol = "ÔÄì"
style = "bold red"
number_threshold = 1
format = "[$symbol]($style)"

[git_status]
format = '([ \( $all_status$ahead_behind\)]($style) )'
style = 'bold cyan'
conflicted = '[ÔÅ™ ${count}](bright-red) '                     # confliced
up_to_date = '[Û∞òΩ](bright-green) '                            # up-to-date
untracked = '[Û∞ãó ${count}](red) '                             # untracked
ahead = 'ÔÇ™ ahead=${count}'
diverged = 'ÔÇ™ ahead=${ahead_count} ÔÇ´ behind=${behind_count}'
behind = 'ÔÇ´ behind=${count}'
stashed = '[Ôäã stashed=${count}](green) '
modified = '[Û∞õø ${count}](yellow) '                           # modified
staged = '[Û∞êó staged=${count}](green) '
renamed = '[Û±ç∏ renamed=${count}](yellow) '
deleted = '[Û∞ç∂ deleted=${count}](red) '

[git_state]
format = '\([$state( $progress_current/$progress_total)]($style)\) '
style = "bright-black"

[git_metrics]
disabled = false

[cmd_duration]
format = "[$duration]($style)"
style = "yellow"

[memory_usage]
symbol = "Ô°ö "

[time]
disabled = false
style = "bold bright-yellow"
format = "[Ôê∫ $time ]($style)"

[custom.stunnel]
when = "ps aux | grep stunnel | grep -v grep"
command = "ps -o etime= -p $(ps aux | grep stunnel | grep -v grep | awk '{print $2}')"
style = "red"
format = "[TUNNEL OPEN for $output]($style)"
